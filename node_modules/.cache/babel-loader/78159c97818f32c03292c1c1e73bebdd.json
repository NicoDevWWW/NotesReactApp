{"ast":null,"code":"var _jsxFileName = \"/home/nicolas/Documents/_Digitalschool/ReactApp/NotesReactApp/src/container/EditModal.js\";\n\n/**\n * @author Nicolas SQUEREN <nicosqueren@gmail.fr>\n * @copyright Copyright (c) 2020 Moulinroty (https://www.moulinroty.com)\n * @link https://www.moulinroty.com\n */\nimport React, { Component } from \"react\";\nimport ReactModal from 'react-modal';\nimport { Button } from '@material-ui/core';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { createNote, updateNote } from '../service/Api';\n\nclass EditModal extends Component {\n  constructor(props) {\n    super();\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleOpenModal = () => {\n      this.setState({\n        isOpen: true\n      });\n    };\n\n    this.handleCloseModal = () => {\n      this.setState({\n        isOpen: false\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      createNote(this.state);\n\n      if (this.props.updateMode) {\n        updateNote(this.state).then(() => console.log('La note a été modifiée'));\n      } else {\n        createNote(this.state).then(() => this.setState({\n          isOpen: false\n        }), console.log('La note a été ajoutée'));\n      }\n    };\n\n    this.state = {\n      id: props.note ? props.note.id : null,\n      title: props.note ? props.note.title : '',\n      description: props.note ? props.note.description : '',\n      isOpen: props.isOpen\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.updateMode && prevProps.isOpen !== prevState.isOpen) {\n      this.setState({\n        isOpen: prevProps.isOpen\n      });\n    }\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      isOpen\n    } = this.state;\n    const {\n      updateMode\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(ReactModal, {\n      isOpen: isOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, \"EDIT NOTE\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"block_form\",\n      method: \"post\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      className: \"input_form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, \"Titre :\"), /*#__PURE__*/React.createElement(Input, {\n      name: \"title\",\n      onChange: this.handleChange,\n      value: title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(FormControl, {\n      className: \"input_form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, \"Description :\"), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.handleChange,\n      name: \"description\",\n      value: description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 8\n      }\n    }, updateMode ? 'MODIFIER' : 'AJOUTER')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"closemodal\",\n      onClick: this.handleCloseModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, \"Close modal\"))));\n  }\n\n}\n\nexport default EditModal;","map":{"version":3,"sources":["/home/nicolas/Documents/_Digitalschool/ReactApp/NotesReactApp/src/container/EditModal.js"],"names":["React","Component","ReactModal","Button","Input","InputLabel","FormControl","createNote","updateNote","EditModal","constructor","props","handleChange","event","setState","target","name","value","handleOpenModal","isOpen","handleCloseModal","handleSubmit","preventDefault","state","updateMode","then","console","log","id","note","title","description","componentDidUpdate","prevProps","prevState","snapshot","render"],"mappings":"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","sourcesContent":["/**\n * @author Nicolas SQUEREN <nicosqueren@gmail.fr>\n * @copyright Copyright (c) 2020 Moulinroty (https://www.moulinroty.com)\n * @link https://www.moulinroty.com\n */\nimport React, {Component} from \"react\";\nimport ReactModal from 'react-modal';\nimport  {Button}  from '@material-ui/core';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { createNote, updateNote } from '../service/Api'\n\nclass EditModal extends Component{\n\tconstructor(props) {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tid: props.note ? props.note.id : null,\n\t\t\ttitle: props.note ? props.note.title: '',\n\t\t\tdescription: props.note ? props.note.description: '',\n\t\t\tisOpen: props.isOpen\n\t\t}\n\t}\n\thandleChange = (event) => {\n\t\tthis.setState({\n\t\t\t[event.target.name]: event.target.value\n\t\t})\n\t}\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\n\t\tif (prevProps.updateMode && prevProps.isOpen !== prevState.isOpen) {\n\t\t\tthis.setState({isOpen: prevProps.isOpen})\n\t\t}\n\t}\n\thandleOpenModal = () => {\n\t\tthis.setState({isOpen: true})\n\t}\n\thandleCloseModal = () => {\n\t\tthis.setState({isOpen: false})\n\t}\n\thandleSubmit = (event) => {\n\t\tevent.preventDefault()\n\t\tcreateNote(this.state)\n\t\tif (this.props.updateMode) {\n\t\t\tupdateNote(this.state)\n\t\t\t\t.then(() => console.log('La note a été modifiée'))\n\t\t} else {\n\t\t\tcreateNote(this.state)\n\t\t\t\t.then(() => this.setState({isOpen: false}), console.log('La note a été ajoutée'))\n\t\t}\n\t}\n\trender() {\n\t\tconst { title, description, isOpen } = this.state\n\t\tconst { updateMode } = this.props\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{/*<Button className='action_btn' onClick={this.handleOpenModal}>CREATE NOTE</Button>*/}\n\t\t\t\t<ReactModal\n\t\t\t\tisOpen={isOpen}\n\t\t\t\t>\n\t\t\t\t\t<div className='modal_container'>\n\t\t\t\t\t\t<h1>EDIT NOTE</h1>\n\n\t\t\t\t\t\t<form className='block_form' method='post' onSubmit={this.handleSubmit}>\n\t\t\t\t\t\t\t<FormControl className='input_form'>\n\t\t\t\t\t\t\t\t<InputLabel>Titre :</InputLabel>\n\t\t\t\t\t\t\t\t<Input  name='title' onChange={this.handleChange} value={title}/>\n\t\t\t\t\t\t\t</FormControl >\n\t\t\t\t\t\t\t<FormControl className='input_form'>\n\t\t\t\t\t\t\t\t<InputLabel>Description :</InputLabel>\n\t\t\t\t\t\t\t\t<Input   onChange={this.handleChange} name='description' value={description}/>\n\t\t\t\t\t\t\t</FormControl>\n\n\t\t\t\t\t\t\t<Button type=\"submit\">{updateMode ? 'MODIFIER' : 'AJOUTER'}</Button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\t<div className='closemodal' onClick={this.handleCloseModal}>Close modal</div>\n\t\t\t\t\t</div>\n\t\t\t\t</ReactModal>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default EditModal\n"]},"metadata":{},"sourceType":"module"}